Given an array nums of size n, return the majority element.

The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.

 

Example 1:

Input: nums = [3,2,3]
Output: 3

Source code: 
class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int n= nums.size();
        unordered_map<int, int>m;

        for(int i=0;i<n;i++){
            m[nums[i]]++;
        }
        n=n/2;
        for(auto x: m){
            if(x.second > n){
            return x.first;
        }
        }
        return 0;
    }
};
