Subarray Sums Divisible by K

Given an integer array nums and an integer k, return the number of non-empty subarrays that have a sum divisible by k.

A subarray is a contiguous part of an array.

 

Example 1:

Input: nums = [4,5,0,-2,-3,1], k = 5
Output: 7
Explanation: There are 7 subarrays with a sum divisible by k = 5:
[4, 5, 0, -2, -3, 1], [5], [5, 0], [5, 0, -2, -3], [0], [0, -2, -3], [-2, -3]

Source Code: 
class Solution {
public:
    int subarraysDivByK(vector<int>& nums, int k) {
        int n = nums.size();
        int sum =0;
        int count = 0;
        unordered_map<int, int>m;
        m[0]=1;
        for(int i : nums){
            sum +=i;
            int mod = sum%k;
            if(mod<0)
                mod+=k;
            if(m.find(mod)!=m.end()){
                count += m[mod];
            }
            m[mod]++;
        }
        return count;
    }
};
